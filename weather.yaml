esphome:
  name: weather_01
  platform: ESP8266
  board: d1_mini

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  fast_connect: true
  power_save_mode: high
  output_power: '10dB'
  manual_ip:
    static_ip: 192.168.1.129
    gateway: 192.168.1.1
    subnet: 255.255.255.0

api:

ota:

deep_sleep:
  run_duration: 60s # max run duration, will sleep earlier if sensor values are sent
  sleep_duration: 30min
  id: deep_sleep_01

switch:
  - platform: template
    name: Prevent deep sleep
    id: prevent_deep_sleep
    restore_state: false
    turn_on_action:
      - deep_sleep.prevent: deep_sleep_01
    turn_off_action:
      - deep_sleep.enter: deep_sleep_01

i2c:
  sda: GPIO04
  scl: GPIO05
  scan: true
  id: bus_a

sensor:
  - platform: adc
    pin: A0
    name: "Battery voltage"
    update_interval: 1s
    accuracy_decimals: 3
    filters:
      - multiply: 4.190

  - platform: bme280
    temperature:
      name: "BME280 Temperature"
      id: bme280_temperature
    pressure:
      name: "BME280 Pressure"
      id: bme280_pressure
    humidity:
      name: "BME280 Relative Humidity"
      id: bme280_humidity
      on_value:
        then:
         - if:
             condition:
               api.connected:
             then:
               - delay: 2s #give the templates time to update
               - deep_sleep.enter: deep_sleep_01
    address: 0x76
    update_interval: 1s

  - platform: template
    name: "Absolute Humidity"
    lambda: |-
      const float mw = 18.01534;    // molar mass of water g/mol
      const float r = 8.31447215;   // Universal gas constant J/mol/K
      return (6.112 * powf(2.718281828, (17.67 * id(bme280_temperature).state) /
        (id(bme280_temperature).state + 243.5)) * id(bme280_humidity).state * mw) /
        ((273.15 + id(bme280_temperature).state) * r); // in grams/m^3
    accuracy_decimals: 2
    unit_of_measurement: 'g/m³'
    icon: 'mdi:water'
    update_interval: 1s

  - platform: template
    name: "Dew Point"
    lambda: |-
      return (243.5*(log(id(bme280_humidity).state/100)+((17.67*id(bme280_temperature).state)/
        (243.5+id(bme280_temperature).state)))/(17.67-log(id(bme280_humidity).state/100)-
        ((17.67*id(bme280_temperature).state)/(243.5+id(bme280_temperature).state))));
    unit_of_measurement: °C
    icon: 'mdi:thermometer-alert'
    update_interval: 1s
